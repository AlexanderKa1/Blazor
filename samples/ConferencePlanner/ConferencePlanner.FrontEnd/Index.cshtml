@using System.Reflection

<div class="agenda">
    <h1>NDC Oslo 2017</h1>

    <div class="row">
        @foreach (var session in Sessions)
        {
            <div class="col-md-3">
                <div class="panel panel-default session">
                    <div class="panel-body">
                        <p>@session.Track?.Name</p>
                        <h3 class="panel-title"><a asp-page="Session" asp-route-id="@session.ID">@session.Title</a></h3>
                        <p>
                            @if (session.Speakers != null)
                            {
                                @foreach (var speaker in session.Speakers)
                                {
                                    <em><a asp-page="Speaker" asp-route-id="@speaker.ID">@speaker.Name</a></em>
                                }
                            }
                        </p>
                        <form method="post">
                            <input type="hidden" name="sessionId" value="@session.ID" />
                            <p>
                                @{ 
                                    var url = $"~/EditSession/{session.ID}";
                                }
                                <a authz-policy="Admin" href=@url asp-route-id="@session.ID" class="btn btn-default btn-sm">Edit</a>
                                @if (UserSessions.Contains(session.ID))
                                {
                                    <button authz="true" type="submit" asp-page-handler="Remove" class="btn btn-default btn-sm"><span class="glyphicon glyphicon-star" aria-hidden="true"></span></button>
                                }
                                else
                                {
                                    <button authz="true" type="submit" class="btn btn-default btn-sm"><span class="glyphicon glyphicon-star-empty" aria-hidden="true"></span></button>
                                }
                            </p>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>

</div>

@functions {
    private int _initCount = 0;

    public IEnumerable<ClientSessionResponse> Sessions { get; set; }
       = Enumerable.Empty<ClientSessionResponse>();

    public List<int> UserSessions { get; set; } = new List<int>();

    //protected readonly IApiClient _apiClient =
    //    new ApiClient(new HttpClient(), "http://localhost:56009");

    protected readonly HttpClient _httpClient = new HttpClient();

    public string TitleSuffix { get; set; } = "Initial";

    override public async Task InitAsync()
    {
        var count = System.Threading.Interlocked.Increment(ref _initCount);

        Console.WriteLine($"CALLED Index.InitAsync() [{count}]");

        var sessions = await GetSessionsAsync() ?? Enumerable.Empty<ClientSessionResponse>();

        Sessions = sessions;

        Console.WriteLine($"RETURNING Index.InitAsync() [{count}]");
    }

    public async Task<ClientSessionResponse[]> GetSessionsAsync()
    {
        var response = await _httpClient.GetAsync("http://localhost:56009/api/sessions");

        response.EnsureSuccessStatusCode();

        var resultRaw = await response.Content.ReadAsStringAsync();

        return JsonUtil.Deserialize<ClientSessionResponse[]>(resultRaw);
    }
}