@using System.Reflection
@section Scripts {
    <br />
    <h6>This is from RenderSection. </h6>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
}

@functions {
    public string Text { get; set; }
}

<h1>Hello, world!</h1>
<p>Welcome to your new single-page application.</p>

@*<button @onclick(() => NavigationHelper("/Counter"))>Navigate to Counter</button>*@

<p>
    @* This shows an error at dev time but will work at runtime #hacky *@
    <input type="text" @bind(Text) />
    <button @onclick(() => Trim())>Trim some text</button>
</p>

@functions {
    public void Trim()
    {
        var str = $@"Before trimming: '{Text}'
 After trimming: '{Browser.jQuery.trim(Text)}'";
        Blazor.Runtime.Interop.JavaScript.Window["alert"].Invoke(str);
    }
}

@{
    Context.Items["hello"] = "This shows BlazorContext is persistent across pages.";

    var typeInfo = typeof(ClientServerApp.Client.Hello);
    <h2>@typeInfo.Name attributes</h2>
    <ul>
        @foreach (var prop in typeInfo.GetRuntimeProperties())
    {
        <li>
            <p>@prop.Name</p>
            <ul>
                @foreach (var attribute in prop.GetCustomAttributes())
                {
                    <li>@attribute.GetType().Name</li>
                }
            </ul>
        </li>
        }
    </ul>
}
